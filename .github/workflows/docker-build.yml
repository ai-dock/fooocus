name: Docker Build

on:
  workflow_dispatch:
  #push:
  #  branches: [ "main" ]
    
env:
  UBUNTU_VERSION: 22.04
  BUILDX_NO_DEFAULT_ATTESTATIONS: 1

jobs:
  cpu-base:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        build:
          # Undeclared release tag finds latest from GitHub tags
          - {latest: "false", tag: "v2.5.5", python: "3.10", pytorch: "2.4.0"}
    steps:
      -
        name: Free Space
        run: |
          df -h
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf /usr/local/.ghcup
          sudo rm -rf /usr/local/share/boost
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          df -h
      -
        name: Env Setter
        run: |
          REPO=${GITHUB_REPOSITORY,,}
          echo "REPO_NAMESPACE=${REPO%%/*}" >> ${GITHUB_ENV}
          echo "REPO_NAME=${REPO#*/}" >> ${GITHUB_ENV}
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Permissions fixes
        run: |
          reponame="$(basename ${GITHUB_REPOSITORY})"
          target="${HOME}/work/${reponame}/${reponame}/build/COPY*"
          chmod -R ug+rwX ${target}
      -
        name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Set tags
        run: |
            img_path_ghcr="ghcr.io/${{ env.REPO_NAMESPACE }}/${{ env.REPO_NAME }}"
            img_path_dhub="${{ vars.DOCKERHUB_USER }}/${{ env.REPO_NAME }}-cpu"
            if [[ -z '${{ matrix.build.tag }}' ]]; then
                FOOOCUS_TAG="$(curl -s https://api.github.com/repos/lllyasviel/Fooocus/tags | jq -r '.[0].name')"
            else
                FOOOCUS_TAG="${{ matrix.build.tag }}"
            fi
            [ -z "$FOOOCUS_TAG" ] && { echo "Error: FOOOCUS_TAG is empty. Exiting script." >&2; exit 1; }
            echo "FOOOCUS_TAG=${FOOOCUS_TAG}" >> ${GITHUB_ENV}

            base_tag="v2-cpu-${{ env.UBUNTU_VERSION }}"

            if [[ ${{ matrix.build.latest }} == "true" ]]; then
                echo "Marking latest"
                TAGS="${img_path_ghcr}:${base_tag}-${FOOOCUS_TAG}, ${img_path_ghcr}:${base_tag}, ${img_path_ghcr}:latest-cpu"
            else
                TAGS="${img_path_ghcr}:${base_tag}-${FOOOCUS_TAG}"
            fi
            echo "TAGS=${TAGS}" >> ${GITHUB_ENV}
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: build
          build-args: |
            IMAGE_BASE=ghcr.io/ai-dock/python:${{ matrix.build.python }}-v2-cpu-${{ env.UBUNTU_VERSION }}
            PYTHON_VERSION=${{ matrix.build.python }}
            PYTORCH_VERSION=${{ matrix.build.pytorch }}
            FOOOCUS_TAG=${{ env.FOOOCUS_TAG }}
          push: true
          # Avoids unknown/unknown architecture and extra metadata
          provenance: false
          tags: ${{ env.TAGS }}
    
  nvidia-base:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        build:
          # Undeclared release tag finds latest from GitHub tags
          - {latest: "false", tag: "v2.5.5", python: "3.10", pytorch: "2.4.0", cuda: "12.1.1-base"}
          
    steps:
      -
        name: Free Space
        run: |
          df -h
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf /usr/local/.ghcup
          sudo rm -rf /usr/local/share/boost
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          df -h
      -
        name: Env Setter
        run: |
          REPO=${GITHUB_REPOSITORY,,}
          echo "REPO_NAMESPACE=${REPO%%/*}" >> ${GITHUB_ENV}
          echo "REPO_NAME=${REPO#*/}" >> ${GITHUB_ENV}
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Permissions fixes
        run: |
          reponame="$(basename ${GITHUB_REPOSITORY})"
          target="${HOME}/work/${reponame}/${reponame}/build/COPY*"
          chmod -R ug+rwX ${target}
      -
        name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Set tags
        run: |
          img_path_ghcr="ghcr.io/${{ env.REPO_NAMESPACE }}/${{ env.REPO_NAME }}"
          img_path_dhub="${{ vars.DOCKERHUB_USER }}/${{ env.REPO_NAME }}-cuda"
          
          if [[ -z '${{ matrix.build.tag }}' ]]; then
                FOOOCUS_TAG="$(curl -s https://api.github.com/repos/lllyasviel/Fooocus/tags | jq -r '.[0].name')"
            else
                FOOOCUS_TAG="${{ matrix.build.tag }}"
            fi
            [ -z "$FOOOCUS_TAG" ] && { echo "Error: FOOOCUS_TAG is empty. Exiting script." >&2; exit 1; }
            echo "FOOOCUS_TAG=${FOOOCUS_TAG}" >> ${GITHUB_ENV}

            base_tag="v2-cuda-${{ matrix.build.cuda }}-${{ env.UBUNTU_VERSION }}"

            if [[ ${{ matrix.build.latest }} == "true" ]]; then
                echo "Marking latest"
                TAGS="${img_path_ghcr}:${base_tag}-${FOOOCUS_TAG}, ${img_path_ghcr}:${base_tag}, ${img_path_ghcr}:latest, ${img_path}:latest-cuda"
                TAGS="${TAGS}, ${img_path_dhub}:${FOOOCUS_TAG}, ${img_path_dhub}:latest"
            else
                TAGS="${img_path_ghcr}:${base_tag}-${FOOOCUS_TAG}, ${img_path_dhub}:${FOOOCUS_TAG}"
            fi
          echo "TAGS=${TAGS}" >> ${GITHUB_ENV}
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: build
          build-args: |
            IMAGE_BASE=ghcr.io/ai-dock/python:${{ matrix.build.python }}-v2-cuda-${{ matrix.build.cuda }}-${{ env.UBUNTU_VERSION }}
            PYTHON_VERSION=${{ matrix.build.python }}
            PYTORCH_VERSION=${{ matrix.build.pytorch }}
            FOOOCUS_TAG=${{ env.FOOOCUS_TAG }}
          push: true
          provenance: false
          tags: ${{ env.TAGS }}

  amd-base:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        build:
          - {latest: "false", tag: "v2.5.5", python: "3.10", pytorch: "2.3.0", rocm: "6.0-core"}
    steps:
      -
        name: Free Space
        run: |
          df -h
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf /usr/local/.ghcup
          sudo rm -rf /usr/local/share/boost
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          df -h
      -
        name: Env Setter
        run: |
          REPO=${GITHUB_REPOSITORY,,}
          echo "REPO_NAMESPACE=${REPO%%/*}" >> ${GITHUB_ENV}
          echo "REPO_NAME=${REPO#*/}" >> ${GITHUB_ENV}
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Permissions fixes
        run: |
          reponame="$(basename ${GITHUB_REPOSITORY})"
          target="${HOME}/work/${reponame}/${reponame}/build/COPY*"
          chmod -R ug+rwX ${target}
      -
        name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Set tags
        run: |
          img_path_ghcr="ghcr.io/${{ env.REPO_NAMESPACE }}/${{ env.REPO_NAME }}"
          img_path_dhub="${{ vars.DOCKERHUB_USER }}/${{ env.REPO_NAME }}-rocm"
          
          if [[ -z '${{ matrix.build.tag }}' ]]; then
                FOOOCUS_TAG="$(curl -s https://api.github.com/repos/lllyasviel/Fooocus/tags | jq -r '.[0].name')"
            else
                FOOOCUS_TAG="${{ matrix.build.tag }}"
            fi
            [ -z "$FOOOCUS_TAG" ] && { echo "Error: FOOOCUS_TAG is empty. Exiting script." >&2; exit 1; }
            echo "FOOOCUS_TAG=${FOOOCUS_TAG}" >> ${GITHUB_ENV}

            base_tag="v2-rocm-${{ matrix.build.rocm }}-${{ env.UBUNTU_VERSION }}"

            if [[ ${{ matrix.build.latest }} == "true" ]]; then
                echo "Marking latest"
                TAGS="${img_path_ghcr}:${base_tag}-${FOOOCUS_TAG}, ${img_path_ghcr}:${base_tag}, ${img_path_ghcr}:latest-rocm"
            else
                TAGS="${img_path_ghcr}:${base_tag}-${FOOOCUS_TAG}"
            fi
          echo "TAGS=${TAGS}" >> ${GITHUB_ENV}
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: build
          build-args: |
            IMAGE_BASE=ghcr.io/ai-dock/python:${{ matrix.build.python }}-v2-rocm-${{ matrix.build.rocm }}-${{ env.UBUNTU_VERSION }}
            PYTHON_VERSION=${{ matrix.build.python }}
            PYTORCH_VERSION=${{ matrix.build.pytorch }}
            FOOOCUS_TAG=${{ env.FOOOCUS_TAG }}
          push: true
          provenance: false
          tags: ${{ env.TAGS }}